# sienge/sienge_ia.py
import logging
from openai import OpenAI
import pandas as pd

logging.warning("ü§ñ Rodando m√≥dulo sienge_ia.py (an√°lises autom√°ticas de dados financeiros)")

# ============================================================
# üîê CLIENTE OPENAI
# ============================================================
# ‚ö†Ô∏è Certifique-se de ter a vari√°vel OPENAI_API_KEY configurada
# no ambiente (no Render: "Environment Variables").
client = OpenAI()

# ============================================================
# üß† FUN√á√ÉO PRINCIPAL DE AN√ÅLISE
# ============================================================
def gerar_analise_financeira(titulo: str, dados: pd.DataFrame) -> str:
    """
    Gera uma an√°lise executiva dos dados financeiros (receitas, despesas, obras, fornecedores, etc.)
    usando o modelo GPT.
    """
    try:
        if dados.empty:
            return "‚ö†Ô∏è Nenhum dado encontrado para an√°lise."

        amostra = dados.head(25).to_markdown(index=False)
        total = len(dados)

        prompt = f"""
        Voc√™ √© um analista financeiro especialista no setor da constru√ß√£o civil.
        Analise o relat√≥rio abaixo e gere uma an√°lise gerencial detalhada e clara.

        **Instru√ß√µes:**
        - Identifique tend√™ncias de receitas e despesas.
        - Destaque obras, fornecedores ou centros de custo com maiores gastos.
        - Detecte poss√≠veis anomalias ou oportunidades de otimiza√ß√£o.
        - Termine com um resumo executivo em linguagem de neg√≥cio.

        **Relat√≥rio:**
        - T√≠tulo: {titulo}
        - Registros: {total}
        - Amostra:
        {amostra}
        """

        resposta = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": "Voc√™ √© um consultor financeiro especializado em constru√ß√£o civil."},
                {"role": "user", "content": prompt},
            ],
            temperature=0.5,
            max_tokens=900,
        )

        return resposta.choices[0].message.content

    except Exception as e:
        logging.exception("Erro ao gerar an√°lise financeira:")
        return f"‚ùå Erro ao gerar an√°lise financeira: {e}"
